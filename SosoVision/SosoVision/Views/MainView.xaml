<Window
    x:Class="SosoVision.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extension="clr-namespace:SosoVision.Extensions"
    xmlns:local="clr-namespace:SosoVision"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://prismlibrary.com/"
    Title="SosoVision"
    Width="1100"
    Height="860"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    Background="{DynamicResource MaterialDesignPaper}"
    Closed="MainView_Closed"
    FontFamily="微软雅黑"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <materialDesign:DialogHost
        x:Name="DialogHost"
        DialogTheme="Inherit"
        Identifier="Root">
        <materialDesign:DrawerHost
            x:Name="drawerHost"
            DrawerOpened="DrawerHost_OnDrawerOpened"
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
            IsRightDrawerOpen="{Binding ElementName=LogToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Right"
                        materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=ArrowLeft}"
                        Content="{materialDesign:PackIcon Kind=EmoticonSad}"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignActionToggleButton}" />

                    <GroupBox Header="视觉处理流程" Style="{DynamicResource MaterialDesignCardGroupBox}">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon
                                        Width="32"
                                        Height="32"
                                        VerticalAlignment="Center"
                                        Kind="ImageEdit" />
                                    <TextBlock
                                        Margin="8,0,0,0"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                        Text="{Binding}" />
                                    <!--<Button
                                        Margin="10,0,0,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Command="{Binding DataContext.AddVisionStepCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                        FontWeight="Bold"
                                        Foreground="White"
                                        Style="{StaticResource MaterialDesignFlatButton}"
                                        ToolTip="添加流程">
                                        +
                                    </Button>
                                    <Button
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Command="{Binding DataContext.SubVisionStepCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                        FontWeight="Bold"
                                        Foreground="White"
                                        Style="{StaticResource MaterialDesignFlatButton}"
                                        ToolTip="删除流程">
                                        -
                                    </Button>-->
                                </StackPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <ListBox
                            x:Name="DemoItemsListBox"
                            ItemsSource="{Binding ShowListCollection}"
                            PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="SelectionChanged">
                                    <b:InvokeCommandAction Command="{Binding NavigateCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>

                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <materialDesign:DrawerHost.RightDrawerContent>
                <DockPanel MinWidth="300" MaxWidth="500">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Left"
                        materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=ArrowRight}"
                        Content="{materialDesign:PackIcon Kind=EmoticonSad}"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=LogToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignActionToggleButton}" />
                    <Border Background="{DynamicResource MaterialDesignBackground}">
                        <GroupBox
                            Header="日志"
                            Style="{DynamicResource MaterialDesignGroupBox}"
                            UseLayoutRounding="True">
                            <ListBox ItemsSource="{Binding LogStructs}" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border Background="{Binding BackColor}">
                                                        <TextBox
                                                            Margin="2"
                                                            BorderThickness="0"
                                                            FontSize="15"
                                                            IsReadOnly="True"
                                                            Text="{Binding Message}"
                                                            TextWrapping="Wrap" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </GroupBox>
                    </Border>
                </DockPanel>
            </materialDesign:DrawerHost.RightDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <materialDesign:Snackbar
                    x:Name="Snackbar"
                    Panel.ZIndex="1"
                    MessageQueue="{materialDesign:MessageQueue}" />
                <materialDesign:ColorZone
                    x:Name="ColorZone"
                    Grid.Row="0"
                    Padding="10"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel LastChildFill="True">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=ArrowRight}"
                                AutomationProperties.Name="HamburgerToggleButton"
                                Content="{materialDesign:PackIcon Kind=FileTree}"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignActionToggleButton}" />
                            <Button
                                x:Name="HomeButton"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding HomeCommand}"
                                Content="{materialDesign:PackIcon Kind=Home,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                ToolTip="主页" />
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <Button
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding DataContext.ShowDialogCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="ToolControlBoxView"
                                Content="{materialDesign:PackIcon Kind=Tools,
                                                                  Size=20}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                IsEnabled="{Binding IsNotOpModel, Mode=TwoWay}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                ToolTip="视觉工具" />
                            <materialDesign:PopupBox PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    <StackPanel
                                        Margin="10"
                                        HorizontalAlignment="Center"
                                        Orientation="Horizontal">
                                        <TextBlock Margin="0,0,10,0" Text="Light" />
                                        <ToggleButton x:Name="DarkModeToggleButton" Click="MenuDarkModeButton_Click" />
                                        <TextBlock Margin="10,0,0,0" Text="Dark" />
                                    </StackPanel>

                                    <Separator />

                                    <Button IsEnabled="{Binding IsNotOpModel, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Settings" />
                                            <TextBlock Margin="5,0" Text="系统设置" />
                                        </StackPanel>
                                    </Button>

                                    <Button
                                        Command="{Binding DataContext.ShowDialogCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                        CommandParameter="SettingView"
                                        IsEnabled="{Binding IsNotOpModel, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Eye" />
                                            <TextBlock Margin="5,0" Text="视觉配置" />
                                        </StackPanel>
                                    </Button>

                                    <Button Command="{Binding DataContext.ShowDialogCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="LoginView">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Login" />
                                            <TextBlock
                                                Margin="5,0"
                                                VerticalAlignment="Top"
                                                Text="登陆" />
                                        </StackPanel>
                                    </Button>

                                    <Separator />

                                    <Button>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="About" />
                                            <TextBlock Margin="5,0" Text="关于" />
                                        </StackPanel>
                                    </Button>

                                </StackPanel>
                            </materialDesign:PopupBox>
                            <ToggleButton
                                x:Name="LogToggleButton"
                                HorizontalAlignment="Left"
                                materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=ArrowLeft}"
                                AutomationProperties.Name="HamburgerToggleButton"
                                Content="{materialDesign:PackIcon Kind=NoteTextOutline}"
                                DockPanel.Dock="Top"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignActionToggleButton}" />
                        </StackPanel>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="22"
                            Text="嗖 嗖 视 觉 处 理 系 统" />
                    </DockPanel>
                </materialDesign:ColorZone>

                <ContentControl
                    x:Name="ViewContent"
                    Grid.Row="1"
                    mvvm:RegionManager.RegionName="{x:Static extension:PrismManager.MainViewRegionName}" />
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
