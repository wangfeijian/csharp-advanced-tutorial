<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Border" Background="Transparent">
            <ContentPresenter
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                TextBlock.FontFamily="pack://application:,,,/Fonts/#IconFont" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="IoButton.MouseOver.Background" Color="#9F9F9F" />
    <SolidColorBrush x:Key="IoButton.MouseOver.Border" Color="Transparent" />
    <SolidColorBrush x:Key="IoButton.Pressed.Background" Color="#03a9f4" />
    <SolidColorBrush x:Key="IoButton.Pressed.Border" Color="Transparent" />
    <SolidColorBrush x:Key="IoButton.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="IoButton.Disabled.Border" Color="#FFADB2B5" />
    <ControlTemplate x:Key="IoButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Border" Background="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <materialDesign:PackIcon
                    Width="25"
                    Height="25"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="Green"
                    Kind="Circle" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="25"
                    Text="{TemplateBinding Button.Content}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource IoButton.MouseOver.Background}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IoButton.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource IoButton.Pressed.Background}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IoButton.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource IoButton.Disabled.Background}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IoButton.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DataGridContentStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    <Style x:Key="DataGridHeadStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="TextBlockDataGridHeader" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="AlternatingRowBackground" Value="LightSkyBlue" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="True" />
        <Setter Property="CanUserDeleteRows" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="IsReadOnly" Value="False" />
    </Style>
</ResourceDictionary>